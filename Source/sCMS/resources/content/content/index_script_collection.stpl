// ##  <script language="JavaScript">	
// #######################################################################################################################################
// # GLOBAL
// #######################################################################################################################################		
var collection =
{
	// CREATE
	create : function (attributes)
	{
		// CREATE			
		var create =	function ()
						{
							// SHOW BUSY
							modal.busy ();
							
							setTimeout (function () 
										{																					
											modal.getUIElement ("create").setAttribute ("disabled", true);
											
											get ();
																																					
											attributes.current = sCMS.collection.new (UI.elements.content.collections.getItem ().id, attributes.current.title);
											sCMS.collection.save (attributes.current);
							
											attributes.type = "collection";
											;
							
											collection.edit ({current: attributes.current, row: UI.elements.content.collections.addItem (attributes.current)});
																																							
											dispose ();
										}, 150);																					
						};			
							
		// SET
		var set = 		function ()
						{
							attributes.current = {};
							attributes.current.title = "";							
						
							attributes.checksum = sConsole.helpers.arrayChecksum (attributes.current);
						
							onChange ();		
						};
						
		// GET
		var get =		function ()
						{
							attributes.current.title = modal.getUIElement ("title").getAttribute ("value");
						};
						
		// DISPOSE 
		var dispose =	function ()
						{
							modal.getUIElement ("close").setAttribute ("disabled", true);		
							modal.dispose ();							
							modal = null;
						};						

		// ONINIT						
		var onInit =	function ()
						{
							if (!attributes)
								attributes = new Array ();
						
							modal.getUIElement ("title").setAttribute ("onChange", onChange);		
							
							modal.getUIElement ("create").setAttribute ("onClick", create);
							modal.getUIElement ("close").setAttribute ("onClick", modal.dispose);		
							
							//
							set ();
							
							// SHOW
							modal.show ();									
						}
						
		// ONCHANGE
		var onChange =	function ()
						{
							get ();							
						
							if ((modal.getUIElement ("title").getAttribute ("value") != ""))
							{
								modal.getUIElement ("create").setAttribute ("disabled", false);
							}
							else
							{
								modal.getUIElement ("create").setAttribute ("disabled", true);
							}										
						};
						

		// INIT		
		var modal = new sConsole.modal.window ({width: "600px", height: "150px", titleBarUI: [{type: "button", attributes: {tag: "create", label: "Create"}}, {type: "button", attributes: {tag: "close", label: "Close"}}], busy: true, SUIXML: "<%Write (SorentoLib.Services.Config.GetString ("sconsole", "url"))%>xml/scms/content/collection_create.xml", onInit: onInit});
	},

	// EDIT
	edit : function (attributes)
	{			
		// SAVE
		var save = 		function ()
						{
							// SHOW BUSY
							modal.busy ();
							
							setTimeout (function () 
										{
											get ();
													
											sCMS.collection.save (attributes.current);	
											UI.elements.content.collections.setItem (attributes.current, attributes.row);
										
											attributes.current.type = "collection";																					
											attributes.checksum = sConsole.helpers.arrayChecksum (attributes.current);
											onChange ();													
																
											modal.busy ();							
										}, 150);						
						};
										
		// SET	
		var set =		function ()
						{																										
							modal.getUIElement ("title").setAttribute ("value", attributes.current.title);
							
							for (i=0; i <attributes.current.contents.length; i++)
							{
								var content = attributes.current.contents[i];												
								attributes.fields[content.id].setAttribute ("value", content.data);
							}
							
							get ();
							
							attributes.checksum = sConsole.helpers.arrayChecksum (attributes.current);
						};
				
		// GET		
		var get = 		function ()
						{
							attributes.current.title = modal.getUIElement ("title").getAttribute ("value");
							
							attributes.current.contents = new Array ();
							for (i=0; i < attributes.collectionschema.fields.length; i++)
							{
								var content = {};
								content.id = attributes.collectionschema.fields[i].id;
								content.type = attributes.collectionschema.fields[i].type;
								content.data = attributes.collectionschema.fields[i].data = attributes.fields[attributes.collectionschema.fields[i].id].getAttribute ("value");
								
								attributes.current.contents[i] = content;
							}						
						};
						
		// DISPOSE
		var dispose =	function ()
						{
							modal.getUIElement ("close").setAttribute ("disabled", true);		
							modal.dispose ();							
							modal = null;
						};
	
		// ONINIT
		var onInit =	function ()
						{
							if (!attributes)
								attributes = new Array ();
				
							if (!attributes.current)
							{
								attributes.current = sCMS.collection.load (UI.elements.content.collections.getItem ().id);
							}							
						
							modal.getUIElement ("save").setAttribute ("onClick", save);
							modal.getUIElement ("close").setAttribute ("onClick", dispose);													
							
							modal.getUIElement ("title").setAttribute ("onChange", onChange);
	
							attributes.collectionschema = sCMS.collectionSchema.load (attributes.current.collectionschemaid);
							attributes.fields = sCMS.modal.edit.fieldRender ({fields: attributes.collectionschema.fields, appendTo: modal.getUIElement ("fieldslayoutbox").getPanel ("fieldspanel"), onChange: onChange});	
	
							// REDRAW										
							SNDK.SUI.redraw ();
									
							// SET
							set ();		
							
							// SHOW
							modal.show ();								
						};						
																
		// ONCHANGE	
		var onChange =	function ()
						{			
							get ();
														
							if (sConsole.helpers.arrayChecksum (attributes.current) != attributes.checksum)
							{
								modal.getUIElement ("save").setAttribute ("disabled", false);
							}
							else
							{
								modal.getUIElement ("save").setAttribute ("disabled", true);									
							}									
						};							
		
		// INIT
		var modal = new sConsole.modal.window ({dimensions: "auto", titleBarUI: [{type: "button", attributes: {tag: "save", label: "Save"}}, {type: "button", attributes: {tag: "close", label: "Close"}}], busy: true, SUIXML: "<%Write (SorentoLib.Services.Config.GetString ("sconsole", "url"))%>xml/scms/content/collection_edit.xml", onInit: onInit});							
	},
	
	// DELETE
	delete : function ()
	{
		var action =	function (result)
						{
							if (result == 1)
							{														
								if (sCMS.collection.delete (UI.elements.content.collections.getItem ().id))
								{
									UI.elements.content.collections.removeItem ();
								}										
							}
						};
	
		sConsole.modal.question ({title: "Delete collection", text: "Do you really want to delete this collection ?", button1Label: "Yes", button2Label: "No", onDone: action});
	},
	
	// UP
	up : function ()
	{
		var move = UI.elements.content.collections.moveItemUp ();
		
		var id1 = UI.elements.content.collections.getItem (move[0]).id;
		var item1 = sCMS.collection.load (id1);
		item1.sort = move[0];
		sCMS.collection.save (item1);
		
		var id2 = UI.elements.content.collections.getItem (move[1]).id;
		var item2 = sCMS.collection.load (id2);
		item2.sort = move[1];
		sCMS.collection.save (item2);									
	},
	
	// DOWN
	down : function ()
	{
		var move = UI.elements.content.collections.moveItemDown ();
		
		var id1 = UI.elements.content.collections.getItem (move[0]).id;
		var item1 = sCMS.collection.load (id1);
		item1.sort = move[0];
		sCMS.collection.save (item1);
		
		var id2 = UI.elements.content.collections.getItem (move[1]).id;
		var item2 = sCMS.collection.load (id2);
		item2.sort = move[1];
		sCMS.collection.save (item2);
	}
}





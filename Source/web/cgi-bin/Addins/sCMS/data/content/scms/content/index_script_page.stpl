 	// ###  <script language="JavaScript">
	
// #######################################################################################################################################
// # PAGE
// #######################################################################################################################################		
var page =
{
	// CREATE
	create : function ()
	{
		<%Include ("index_script_page_template.stpl")%>
	
		// CREATE			
		var create =	function ()
						{
							var item = get ();
							modal.dispose ();
							
							if (UI.elements.content.pages.getItem ().type == "root")
							{
								item = sCMS.page.new (UI.elements.content.pages.getItem ().id, item.templateid, "00000000-0000-0000-0000-000000000000", item.title);								
							}
							else if (UI.elements.content.pages.getItem ().type == "page")
							{
								var old = sCMS.page.load (UI.elements.content.pages.getItem ().id)
							
								item = sCMS.page.new (old.rootid, item.templateid, UI.elements.content.pages.getItem ().id, item.title);
								//item.parentid = UI.elements.content.pages.getItem ().id;
							}
							
							sCMS.page.save (item);
														
							if (UI.elements.content.pages.getItem ().type == "root")
							{
								item.parentid = UI.elements.content.pages.getItem ().id;
							}
																																			
							item.type = "page";
							UI.elements.content.pages.addItem (item);
								
							//collection.edit ({id: item.id});		
						};			
	
		// ONCHANGE
		var onChange =	function ()
						{						
							if ((modal.getUIElement ("title").getAttribute ("value") != "") && (templateid != ""))
							{
								modal.getUIElement ("create").setAttribute ("disabled", false);
							}
							else
							{
								modal.getUIElement ("create").setAttribute ("disabled", true);
							}										
						};
						
		// GET
		var get =		function ()
						{
							var item = new Array ();							
							item.title = modal.getUIElement ("title").getAttribute ("value");
							item.templateid = templateid;
							return item;
						};

		// INIT
		var modal = new sConsole.modal.window ({SUIXML: "<%Write (SorentoLib.Services.Config.GetString ("sconsole", "url"))%>xml/scms/content/page_create.xml"});
		
		var templateid = "";
						
		modal.getUIElement ("title").setAttribute ("onChange", onChange);		
		modal.getUIElement ("template").setAttribute ("onChange", onChange);
		
		modal.getUIElement ("choosetemplate").setAttribute ("onClick", template.add);
		
		modal.getUIElement ("create").setAttribute ("onClick", create);
		modal.getUIElement ("close").setAttribute ("onClick", modal.dispose);		
		
		modal.show ();		
	},

	// EDIT
	edit : function (attributes)
	{				
		<%Include ("index_script_page_alias.stpl")%>
	
		if (!attributes) attributes = new Array ();
				
		if (!attributes.id)
		{
			attributes.current = sCMS.page.load (UI.elements.content.pages.getItem ().id);
		}
		else
		{
			attributes.current = sCMS.page.load (attributes.id);
		}		
					
		// SAVE
		var save = 		function ()
						{
							var item = get ();										
							sCMS.page.save (item);	
							
							if (item.parentid == "00000000-0000-0000-0000-000000000000")
							{
								item.parentid = item.rootid;
							}
							
							item.type = "page";
							//UI.elements.content.pages.setItem (sCMS.page.load (item.id));
							UI.elements.content.pages.setItem (item);
										
						//	field.dispose ();			
							modal.dispose ();		
						};
										
		// SET	
		var set =		function ()
						{
							
							modal.getUIElement ("title").setAttribute ("value", attributes.current.title);
							modal.getUIElement ("aliases").setItems (attributes.current.aliases);
							
							for (i=0; i <attributes.current.contents.length; i++)
							{
								var content = attributes.current.contents[i];												
								fields[content.id].setAttribute ("value", content.data);
							}
						};
				
		// GET		
		var get = 		function ()
						{
							var item = SNDK.tools.derefItem (attributes.current);
							
							item.title = modal.getUIElement ("title").getAttribute ("value");
							item.aliases = modal.getUIElement ("aliases").getItems ();
							
							item.contents = new Array ();
							for (i=0; i <collectionschema.allfields.length; i++)
							{
								var content = {};
								content.id = collectionschema.allfields[i].id;
								content.type = collectionschema.allfields[i].type;
								content.data = collectionschema.allfields[i].data = fields[collectionschema.allfields[i].id].getAttribute ("value");
																
								item.contents[i] = content;
							}
							
							return item;								
						};
						
		var dispose =	function ()
						{
							//field.dispose (); 
							modal.dispose ();
						};
						
		// ONCHANGE	
		var onChange =	function ()
						{							
							if (sConsole.helpers.compareItems ({array1: attributes.current, array2: get ()}))
							{
								modal.getUIElement ("save").setAttribute ("disabled", false);
							}
							else
							{
								modal.getUIElement ("save").setAttribute ("disabled", true);									
							}		
							
							if (modal.getUIElement ("aliases").getItem () != null)
							{
								modal.getUIElement ("aliasedit").setAttribute ("disabled", false);
								modal.getUIElement ("aliasremove").setAttribute ("disabled", false);
							}	
							else
							{
								modal.getUIElement ("aliasedit").setAttribute ("disabled", true);
								modal.getUIElement ("aliasremove").setAttribute ("disabled", true);
							}							
						};							
	
		// INIT
		var modal = new sConsole.modal.window ({SUIXML: "<%Write (SorentoLib.Services.Config.GetString ("sconsole", "url"))%>xml/scms/content/page_edit.xml"});
		modal.getUIElement ("save").setAttribute ("onClick", save);
		modal.getUIElement ("close").setAttribute ("onClick", dispose);		
						
		modal.getUIElement ("title").setAttribute ("onChange", onChange);
		
		modal.getUIElement ("aliases").setAttribute ("onChange", onChange);
		modal.getUIElement ("aliasadd").setAttribute ("onClick", alias.add);
		modal.getUIElement ("aliasedit").setAttribute ("onClick", alias.edit);
		modal.getUIElement ("aliasremove").setAttribute ("onClick", alias.remove);
						
		var collectionschema = sCMS.template.load (attributes.current.templateid);
		var fields = new Array ();
		
		for (i=0; i <collectionschema.allfields.length; i++)			
		{
			var height = "200px";
		
			switch (collectionschema.allfields[i].type.toLowerCase ())
			{
				case "string":
				{
					height = "65px";
					break;
				}
				
				default:
				{
					break;				
				}
			}
																
			//var layoutbox1 = new SNDK.SUI.layoutbox ({type: "vertical", height: height});
			//layoutbox1.addPanel ({tag: "field", size: "*"});			
			//modal.getUIElement ("fieldslayoutbox").getPanel ("fieldspanel").addUIElement (layoutbox1);
			
			var layoutbox2 = new SNDK.SUI.layoutbox ({type: "vertical", height: height});
			layoutbox2.addPanel ({tag: "text", size: "100px"});
			layoutbox2.addPanel ({tag: "field", size: "*"});
			
			layoutbox2.getPanel ("text").addUIElement (new SNDK.SUI.label ({text: collectionschema.allfields[i].name}));
			
			//layoutbox1.getPanel ("field").addUIElement (layoutbox2);
			
			modal.getUIElement ("fieldslayoutbox").getPanel ("fieldspanel").addUIElement (layoutbox2);
			
			fields[collectionschema.allfields[i].id] = new SNDK.SUI.field ({type: collectionschema.allfields[i].type.toLowerCase (), width: "100%", height: "100%"});	
			fields[collectionschema.allfields[i].id].setAttribute ("onChange", onChange);
			layoutbox2.getPanel ("field").addUIElement (fields[collectionschema.allfields[i].id]);
		}		
		
		SNDK.SUI.redraw ();
				
		// SET
		set ();		
		
		// SHOW
		modal.show ();		
	},
	
	// DELETE
	delete : function ()
	{
		var action =	function (result)
						{
							if (result == 1)
							{														
								if (sCMS.page.delete (UI.elements.content.pages.getItem ().id))
								{
									UI.elements.content.pages.removeItem ();
								}										
							}
						};
	
		sConsole.modal.question ({title: "Delete page", text: "Do you really want to delete this page ?", buttonLabel: "Yes|No", onDone: action});
	},
	
	up : function ()
	{
		UI.elements.content.pages.moveItemUp ();
	},
	
	down : function ()
	{
		UI.elements.content.pages.moveItemDown ();
	}
}




